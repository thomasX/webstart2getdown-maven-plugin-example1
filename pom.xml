<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>info.margreiter.getdown</groupId>
  <artifactId>webstart2getdown-maven-plugin-example1</artifactId>  
  <version>0.0.5-SNAPSHOT</version>

  <dependencies>
    <dependency>
		<groupId>joda-time</groupId>
		<artifactId>joda-time</artifactId>
		<version>2.3</version>
	</dependency>
  </dependencies>

		<build>
		  	<finalName>webstart2getdown-maven-plugin-example</finalName>
		    <plugins>
		      <plugin>
		      	<artifactId>maven-checkstyle-plugin</artifactId>
		      	<version>2.12.1</version>
		      </plugin>
		      
		      <plugin>
		      	<artifactId>maven-surefire-plugin</artifactId>
		      	<version>2.17</version>
		      	<configuration>
		      		<skipTests>${skipTests}</skipTests>
		      			<forkCount>1</forkCount>
						<reuseForks>false</reuseForks>
						<forkedProcessTimeoutInSeconds>300</forkedProcessTimeoutInSeconds>
						<argLine>-XX:MaxPermSize=2G -Xmx2G -Xms2G</argLine>
		      	</configuration>
		      </plugin>
		      <plugin>
		      	<artifactId>maven-surefire-report-plugin</artifactId>
		      	<version>2.17</version>
		      </plugin>
		      <plugin>
		      	<artifactId>maven-compiler-plugin</artifactId>
		      	<version>2.5.1</version>
		      	<configuration>
		      		<encoding>ISO-8859-1</encoding>
		      		<source>1.8</source>
		      		<target>1.8</target>
		      	</configuration>
		      </plugin>
		      <!-- 
		      <plugin>
		      	<artifactId>maven-jar-plugin</artifactId>
		      	<version>2.3.2</version>
		      	<configuration>
		      		<archive>
		      			<manifest>
		      			  <addClasspath>true</addClasspath>
		      			  <mainClass>info.margreiter.getdown.maven.plugin.example.example1.MyApp</mainClass>
		      			</manifest>
		      		</archive>
		      	</configuration>
		      </plugin>
		       -->
		      
		      <!-- CREATE WEBSTART Deployment -->
		      <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>webstart-maven-plugin</artifactId>
                <version>1.0-beta-7</version>
                <executions>
                    <execution>
                        <!-- bind to phase, I prefer to call it manualls -->
                        <phase>package</phase>
                        <goals>
                            <goal>jnlp-inline</goal> <!-- use jnlp, jnlp-inline or jnlp-single as appropriate -->                            
                        </goals>
                    </execution>
                </executions>
                <configuration>
                
                    <!--outputDirectory></outputDirectory--> <!-- not required?? -->

                    <!-- Set to true to exclude all transitive dependencies. Default is false. -->
                    <excludeTransitive>false</excludeTransitive>
                    

                    <!-- The path where the libraries are stored within the jnlp structure. not required. by default the libraries are within the working directory -->
                    <libPath>lib</libPath>
                    <outputJarVersions>true</outputJarVersions>
                    <!-- [optional] transitive dependencies filter - if omitted, all transitive dependencies are included -->
                    <dependencies>
                        <!-- Note that only groupId and artifactId must be specified here. because of a limitation of the Include/ExcludesArtifactFilter -->
                        <!--
                        <includes>
                            <include>commons-logging:commons-logging</include>
                            <include>commons-cli:commons-cli</include>
                        </includes>
                        -->
                        <!--
                        <excludes>
                            <exclude></exclude>
                        <excludes>
                        -->
                     </dependencies>

                    <!--
                    <resourcesDirectory>${project.basedir}/src/main/jnlp/resources</resourcesDirectory>
                    -->
                    <!-- default value -->

                    <!-- JNLP generation -->
                    
                    <jnlp>
                        <!-- default values -->
                        <inputTemplateResourcePath>${project.basedir}/src/main/jnlp/my-templates</inputTemplateResourcePath>
                        <inputTemplate>webstart2getdownExample1.vm</inputTemplate> <!-- relative to inputTemplateResourcePath -->			          
                        <outputFile>webstart2getdownExample1.jnlp</outputFile> <!-- defaults to launch.jnlp -->						
                        <!-- used to automatically identify the jar containing the main class. -->
                        <!-- this is perhaps going to change -->
                        <mainClass>info.margreiter.getdown.maven.plugin.example.example1.MyApp</mainClass>
                    </jnlp>
                    <!-- SIGNING -->
                    <!-- defining this will automatically sign the jar and its dependencies, if necessary -->
                     <sign>
			            <keystore>${project.basedir}/src/main/keys/demokey.jks</keystore> <!-- path or URI (if empty, the default keystore ".keystore"-file in the user-homedir is used) -->
			            <!-- keypass>123456</keypass --><!-- we need to override passwords easily from the command line. ${keypass} -->
			            <storepass>changeit</storepass> <!-- ${storepass} -->
			            <alias>demokey</alias> <!-- alias of the key to  use -->
			            <tsaLocation>http://timestamp.digicert.com</tsaLocation>
			            <verify>false</verify> <!-- verify the signature after signing -->
			        </sign>
				    <unsign>true</unsign> <!-- unsign already signed packages and sign them with own key -->
			        <verifyjar>false</verifyjar>

                    <!-- BUILDING PROCESS -->

                    <pack200>
                       <enabled>false</enabled>
                    </pack200>
                    <gzip>true</gzip> <!-- default force when pack200 false, true when pack200 selected ?? -->

                    <!-- causes a version attribute to be output in each jar resource element, optional, default is false -->
                    <outputJarVersions>false</outputJarVersions>

                    <!--install>false</install--> <!-- not yet supported -->
                    <verbose>true</verbose>
                </configuration>
            </plugin>
            
            
            <plugin>
   			<groupId>com.github.goldin</groupId>
   			<artifactId>copy-maven-plugin</artifactId>
   			<version>0.2.5</version>
   			<executions>
   				<execution>
   					<id>createModifiedJnlpFiles</id>
   					<phase>package</phase>
   					<goals>
   						<goal>copy</goal>
   					</goals>
   					<configuration>
   						<resources>   							
   							<resource>
   								<targetPath>${project.basedir}/target/jnlp</targetPath>
   								<file>${project.basedir}/target/jnlp/webstart2getdownExample1.jnlp</file>
   								<destFileName>webstart2getdownExample1.jnlp</destFileName>   								
   							</resource>
   						</resources>
   					</configuration>
   				</execution>
   			</executions>
   		</plugin>
            
            
            
            
            
            
			<!-- Create the update directory, stubs etc -->
			<plugin>
				<groupId>info.margreiter.getdown</groupId>
				<artifactId>webstart2getdown-maven-plugin</artifactId>
				<version>0.0.5-SNAPSHOT</version>
				<executions>
					<execution>	
					<phase>package</phase>
						<goals>
							<!-- 
							 -->
							<goal>getdowntxt</goal>
							<goal>digest</goal>
						</goals>
						<configuration>
						    <jnlpfile>${project.build.directory}/jnlp/webstart2getdownExample1.jnlp</jnlpfile>
							<appdir>${project.build.directory}/getdown/</appdir>
							<appbase>http://github.io/thomasX/getdown-maven-plugin-example1/getdown/</appbase>
														
			            	<!-- we need to override passwords easily from the command line. ${keypass} -->			            	
							<!-- path or URI (if empty, the default keystore ".keystore"-file in the user-homedir is used) -->
	 						<keystore>${project.basedir}/src/main/keys/demokey.jks</keystore> 
			            	 <!-- ${storepass} -->
			            	<storepass>changeit</storepass>
			            	 <!-- alias of the key to  use -->
			            	<!-- <keypass>123456</keypass> -->
 			            	<alias>demokey</alias>
							<!-- 
							<libPath>${project.build.directory}/lib/</libPath>
							<outputJarVersions>false</outputJarVersions>
							<verbose>true</verbose>
							<appargs>
								<apparg>Some Argument</apparg>
							</appargs>
							<ui>
								<name>My App</name>
								<icons>
									<icon>${basedir}/src/main/images/myapp.png</icon>
								</icons>
								<progressImage>${basedir}/src/main/images/progress.png</progressImage>
								<backgroundImage>${basedir}/src/main/images/splash.png</backgroundImage>
								<progress>80, 244, 196, 11</progress>
								<progressText>FFFFFF</progressText>
								<statusText>FFFFFF</statusText>
								<status>20, 170, 316, 64</status>
								<textShadow>111111</textShadow>
							</ui>
							 -->
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<pluginRepositories>
		<!--
		<pluginRepository>
			<id>getdown-maven-github-repo</id>
			 <url>https://thomasx.github.io/getdown-maven-plugin/</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</pluginRepository>
		--> 
	</pluginRepositories>
	<repositories>
		<!-- 
		    <repository>
			<id>codehaus-snapshots</id>
			<url>http://nexus.codehaus.org/snapshots/</url>
			<snapshots />
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
		-->
	</repositories>
</project>
